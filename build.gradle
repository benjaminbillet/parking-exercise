plugins {
  id "java"
  id "org.springframework.boot" version "2.1.5.RELEASE"
  id "net.ltgt.apt" version "0.21" // an annotation processor used for mapstruct
  id "org.sonarqube" version "2.7" // static code analyzer
}

apply plugin: "java"

apply plugin: "org.springframework.boot"
apply plugin: "io.spring.dependency-management"

apply from: "sonar.gradle"

// use maven central for downloading dependencies
repositories {
  mavenCentral()
}

// a few informations about our application
group = "com.benjaminbillet"
version = "0.0.1-SNAPSHOT"
description = ""

// Java version compatibility
sourceCompatibility = "1.8"
targetCompatibility = "1.8"

// the application entry point
springBoot {
  mainClassName = "exercise.App"
}

bootRun {
  // if no SPRING_PROFILES_ACTIVE environment variable is set, the default will be dev
  environment SPRING_PROFILES_ACTIVE: environment.SPRING_PROFILES_ACTIVE ?: "dev"
}

test {
  useJUnitPlatform()
}

// variables
ext {
  mapstructVersion = "1.3.0.Final"
  problemSpringWebVersion = "0.24.0-RC.0"
}

dependencies {
  // we use the spring web starter: https://github.com/spring-projects/spring-boot/blob/2.1.x/spring-boot-project/spring-boot-starters/spring-boot-starter-web/pom.xml
  implementation "org.springframework.boot:spring-boot-starter-web"

  // jpa starter
  implementation "org.springframework.boot:spring-boot-starter-data-jpa"

  // spring security
  implementation "org.springframework.boot:spring-boot-starter-security"

  // spring actuator
  implementation "org.springframework.boot:spring-boot-starter-actuator"

  // mariadb client
  implementation "org.mariadb.jdbc:mariadb-java-client"

  // caching
  implementation "javax.cache:cache-api"
  implementation "org.ehcache:ehcache"
  implementation "org.hibernate:hibernate-jcache"

  // jackson
  implementation "com.fasterxml.jackson.datatype:jackson-datatype-hppc" // high performance collections
  implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"
  implementation "com.fasterxml.jackson.datatype:jackson-datatype-hibernate5"
  implementation "com.fasterxml.jackson.core:jackson-annotations"
  implementation "com.fasterxml.jackson.core:jackson-databind"
  implementation "com.fasterxml.jackson.module:jackson-module-afterburner"

  // mapstruct
  implementation "org.mapstruct:mapstruct-jdk8:${mapstructVersion}"
  annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

  // Hibernate JPA Model generator
  annotationProcessor "javax.xml.bind:jaxb-api" // https://stackoverflow.com/a/52835834
  annotationProcessor "org.hibernate:hibernate-jpamodelgen"

  // https://tools.ietf.org/html/rfc7807 implementation
  implementation "org.zalando:problem-spring-web:${problemSpringWebVersion}"

  // utils
  implementation "org.apache.commons:commons-lang3"
  implementation "org.apache.commons:commons-collections4:4.3"

  // monitoring
  implementation "io.micrometer:micrometer-registry-prometheus"

  // testing
  testCompile("org.springframework.boot:spring-boot-starter-test") {
    exclude group: 'junit', module: 'junit' // exclude junit 4
  }
  testCompile "org.junit.jupiter:junit-jupiter-engine" // junit 5
  testCompile "org.springframework.security:spring-security-test"
  testCompile "org.springframework.boot:spring-boot-test"
  testCompile "org.assertj:assertj-core"
  testCompile "com.jayway.jsonpath:json-path"
  testCompile "org.mockito:mockito-core"
  testCompile "com.h2database:h2" // in-memory db for testing
}
